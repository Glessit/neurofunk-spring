group 'com.glessit.neurofunky'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

sourceSets {
    production {
        java.srcDirs = java.srcDirs + sourceSets.main.java.srcDirs
        resources.srcDirs 'src/main/resources/env/production'
        output.classesDir = 'build/production/src/main'
        output.resourcesDir = 'build/production/resources/main'
        compileClasspath = compileClasspath.plus(sourceSets.main.compileClasspath)
    }
    idea {
        java.srcDirs = java.srcDirs + sourceSets.main.java.srcDirs
        resources.srcDirs 'src/main/resources/env/development'
        output.classesDir = 'build/classes/main/'
        output.resourcesDir = 'build/resources/main/'
        compileClasspath = compileClasspath.plus(sourceSets.main.compileClasspath)
    }
}

task developmentIdeaSource(type: Copy) {
    println 'well done'
    from('src/main/resources') {
        exclude 'env/**'
    }
    into 'build/resources/main'
}

developmentIdeaSource.dependsOn ideaClasses

task fatJarCommonResourcesCopy(type: Copy) {
    from('src/main/resources') {
        exclude 'env/**'
    }
    into 'build/production/resources/main'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.glessit.neurofunky.NeurofunkClubLauncher',
                'Liquibase-Package': 'liquibase'
    }
    destinationDir = new File('build/production/libs')
    eachFile {
        println it
    }

    from { sourceSets.production.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } + sourceSets.production.runtimeClasspath }
    baseName = project.name + '-production'
}
fatJar.dependsOn productionClasses, fatJarCommonResourcesCopy

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

ext {

    // define versions of project dependencies
    lombokVersion = '1.16.16'
    slf4jVersion = '1.7.25'
    slf4jTolog4j12 = '1.7.25'
    luceneCoreVersion = '6.5.1'
    springDataVersion = '1.11.3.RELEASE'
    springVersion = '4.3.8.RELEASE'
    springSecurityVersion = '4.2.2.RELEASE'
    hibernateVersion = '5.2.10.Final'
    guavaVersion = '21.0'
    httpClient = '4.5.3'
    jacksonCoreVersion = '2.8.8'
    jacksonDatatypeJSR310 = '2.7.4'
    log4jVersion = '2.8.2'
    servletApiVersion = '3.1.0'
    hikariVersion = '2.6.1'
    postgresqlVersion = '42.1.1'
    liquibaseCoreVersion = '3.5.3'
    jettyVersion = '9.4.5.v20170502'
    telegrambotsVersion ='3.2'
    ehcacheVersion = '3.3.1'
    hamcrestVersion = '1.3'
    jsonPathVersion = '2.4.0'
    junitVersion ='4.12'
}

dependencies {

    compile group: 'com.google.guava', name: 'guava', version: guavaVersion
    compile group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: servletApiVersion
    compile group: 'org.telegram', name: 'telegrambots', version: telegrambotsVersion

    // Apache family
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: httpClient
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    compile group: 'org.apache.lucene', name: 'lucene-core', version: luceneCoreVersion

    // Jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonCoreVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonDatatypeJSR310

    // Spring frameworks modules
    compile (group: 'org.springframework.data', name: 'spring-data-jpa', version: springDataVersion) {
        exclude group: 'org.springframework.data:spring-data-commons'
    }
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: springDataVersion
    compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
    compile group: 'org.springframework.security', name: 'spring-security-core', version: springSecurityVersion
    compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion
    compile group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion

    // DB, Hibernate and so on..
    compile group: 'com.zaxxer', name: 'HikariCP', version: hikariVersion
    compile group: 'org.postgresql', name: 'postgresql', version: postgresqlVersion
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
    compile group: 'org.hibernate', name: 'hibernate-jcache', version: hibernateVersion
    compile group: 'org.liquibase', name: 'liquibase-core', version: liquibaseCoreVersion
    compile group: 'org.ehcache', name: 'ehcache', version: ehcacheVersion

    // Jetty as application server
    compile group: 'org.eclipse.jetty', name: 'jetty-annotations', version: jettyVersion
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: jettyVersion
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jettyVersion
    compile group: 'org.eclipse.jetty', name: 'jetty-util', version: jettyVersion
    compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: jettyVersion

    // Test supporting dependencies
    testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: hamcrestVersion
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: jsonPathVersion
    testCompile group: 'junit', name: 'junit', version: junitVersion
}
